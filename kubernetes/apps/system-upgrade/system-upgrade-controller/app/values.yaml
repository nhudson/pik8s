controllers:
  system-upgrade-controller:
    strategy: RollingUpdate
    containers:
      app:
        image:
          repository: docker.io/rancher/system-upgrade-controller
          tag: v0.16.3
        env:
          SYSTEM_UPGRADE_CONTROLLER_DEBUG: false
          SYSTEM_UPGRADE_CONTROLLER_THREADS: 2
          SYSTEM_UPGRADE_JOB_ACTIVE_DEADLINE_SECONDS: 900
          SYSTEM_UPGRADE_JOB_BACKOFF_LIMIT: 99
          SYSTEM_UPGRADE_JOB_IMAGE_PULL_POLICY: IfNotPresent
          SYSTEM_UPGRADE_JOB_KUBECTL_IMAGE: registry.k8s.io/kubectl:v1.34.1
          SYSTEM_UPGRADE_JOB_PRIVILEGED: false
          SYSTEM_UPGRADE_JOB_TTL_SECONDS_AFTER_FINISH: 900
          SYSTEM_UPGRADE_PLAN_POLLING_INTERVAL: 15m
          SYSTEM_UPGRADE_CONTROLLER_NAME: system-upgrade-controller
          SYSTEM_UPGRADE_CONTROLLER_NAMESPACE:
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          SYSTEM_UPGRADE_CONTROLLER_LEADER_ELECT: true
          SYSTEM_UPGRADE_CONTROLLER_NODE_NAME:
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities: { drop: ["ALL"] }
    serviceAccount:
      identifier: system-upgrade-controller
defaultPodOptions:
  securityContext:
    runAsNonRoot: true
    runAsUser: 65534
    runAsGroup: 65534
    seccompProfile: { type: RuntimeDefault }
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: Exists
  tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - key: node-role.kubernetes.io/control-plane
      operator: Exists
      effect: NoSchedule
    - key: node-role.kubernetes.io/master
      operator: Exists
      effect: NoSchedule
serviceAccount:
  system-upgrade-controller: {}
persistence:
  tmp:
    type: emptyDir
    globalMounts:
      - path: /tmp
  etc-ssl:
    type: hostPath
    hostPath: /etc/ssl
    hostPathType: DirectoryOrCreate
    globalMounts:
      - path: /etc/ssl
        readOnly: true
  etc-pki:
    type: hostPath
    hostPath: /etc/pki
    hostPathType: DirectoryOrCreate
    globalMounts:
      - path: /etc/pki
        readOnly: true
  etc-ca-certificates:
    type: hostPath
    hostPath: /etc/ca-certificates
    hostPathType: DirectoryOrCreate
    globalMounts:
      - path: /etc/ca-certificates
        readOnly: true
