---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: sonarr
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.6.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/sonarr-develop
              tag: 4.0.12.2866
            env:
              COMPlus_EnableDiagnostics: 0
              SONARR__APP__INSTANCENAME: Sonarr
              SONARR__APP__THEME: dark
              SONARR__AUTH__METHOD: External
              SONARR__AUTH__REQUIRED: DisabledForLocalAddresses
              SONARR__LOG__LEVEL: info
              SONARR__SERVER__PORT: &port 8989
              SONARR__UPDATE__BRANCH: develop
              SONARR__POSTGRES__HOST: cnpg-postgres-rw.postgres.svc.cluster.local
              SONARR__POSTGRES__MAINDB: sonarr-main
              SONARR__POSTGRES__LOGDB: sonarr-log
              SONARR__POSTGRES__PORT: 5432
              TZ: ${TIMEZONE}
            envFrom:
              - secret: sonarr-env-new
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              runAsUser: 0
            resources:
              requests:
                cpu: 10m
                memory: 400M

          # secondary:
          #   image:
          #     repository: ghcr.io/onedr0p/exportarr
          #     tag: v2.0.1
          #   env:
          #     PORT: &metricsPort 9707
          #     URL: "http://{{ .Release.Name }}-main.{{ .Release.Namespace }}.svc.cluster.local:8989"
          #   envFrom:
          #     - secret: sonarr-env
          #   args: ["sonarr"]
          #   resources:
          #     requests:
          #       cpu: 10m
          #       memory: 100Mi
          #     limits:
          #       memory: 125Mi

        pod:
          securityContext:
            runAsUser: 0

    defaultPodOptions:
      securityContext:
        runAsUser: 0

    service:
      main:
        controller: main
        ports:
          http:
            port: *port
      # secondary:
      #   nameOverride: metrics
      #   controller: main
      #   ports:
      #     metrics:
      #       port: *metricsPort

    ingress:
      main:
        enabled: true
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.dev/css/base/sonarr/dark.css"></head>';
            sub_filter_once on;
        hosts:
          - host: &host "sonarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: sonarr-main
                  port: *port
              - path: /metrics
                pathType: Prefix
                service:
                  name: sonarr-metrics
                  port: 9707
        tls:
          - hosts:
              - *host

    persistence:
      media:
        enabled: true
        type: hostPath
        hostPath: /mnt/tv
      pvc:
        enabled: true
        type: hostPath
        hostPath: /mnt/transcode
      config:
        enabled: true
        accessMode: ReadWriteOnce
        storageClass: nfs
        size: 1Gi

    # serviceMonitor:
    #   secondary:
    #     enabled: true
    #     labels:
    #       app.kubernetes.io/name: sonarr
    #       app.kubernetes.io/instance: sonarr-metrics
    #     selector:
    #       matchLabels:
    #         app.kubernetes.io/instance: sonarr
    #         app.kubernetes.io/name: sonarr
    #         app.kubernetes.io/service: sonarr-metrics
    #     endpoints:
    #       - port: metrics
    #         interval: 4m
    #         scrapeTimeout: 90s
    #         path: /metrics
