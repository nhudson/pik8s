---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &name sonarr
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 4.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  values:
    controllers:
      sonarr:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/sonarr
              tag: 4.0.15.2940@sha256:ca6c735014bdfb04ce043bf1323a068ab1d1228eea5bab8305ca0722df7baf78
            env:
              COMPlus_EnableDiagnostics: 0
              SONARR__APP__INSTANCENAME: Sonarr
              SONARR__APP__THEME: dark
              SONARR__AUTH__METHOD: External
              SONARR__AUTH__REQUIRED: DisabledForLocalAddresses
              SONARR__LOG__LEVEL: info
              SONARR__SERVER__PORT: &port 8989
              SONARR__UPDATE__BRANCH: develop
              SONARR__POSTGRES__HOST: pik8s-postgres-pooler.postgres.svc.cluster.local
              SONARR__POSTGRES__MAINDB: sonarr-main
              SONARR__POSTGRES__LOGDB: sonarr-log
              SONARR__POSTGRES__PORT: 5432
              TZ: ${TIMEZONE}
            envFrom:
              - secret: sonarr-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              runAsUser: 0
            resources:
              requests:
                cpu: 10m
                memory: 400M

        pod:
          securityContext:
            runAsUser: 0

    defaultPodOptions:
      securityContext:
        runAsUser: 0

    service:
      app:
        controller: *name
        ports:
          http:
            port: *port

    ingress:
      main:
        enabled: true
        className: internal
        hosts:
          - host: &host "sonarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: *name
                  port: *port
        tls:
          - hosts:
              - *host

    persistence:
      media:
        enabled: true
        type: hostPath
        hostPath: /mnt/tv
      pvc:
        enabled: true
        type: hostPath
        hostPath: /mnt/transcode
      config:
        enabled: true
        accessMode: ReadWriteOnce
        storageClass: nfs
        size: 1Gi
