---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: sabnzbd
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/sabnzbd
              tag: 4.3.1@sha256:0a1e831d9208a6df6cf2bfc0abe90cdfa67a35e0d7951e52fbf47b19240e8669
            env:
              TZ: "${TIMEZONE}"
              SABNZBD__PORT: &port 80
              SABNZBD__HOST_WHITELIST_ENTRIES: >-
                sabnzbd,
                sabnzbd.media,
                sabnzbd.media.svc,
                sabnzbd.media.svc.cluster,
                sabnzbd.media.svc.cluster.local,
                sabnzbd.${SECRET_DOMAIN},
                sab.${SECRET_DOMAIN},
            envFrom:
              - secret: sab-env
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api?mode=version
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              runAsUser: 0
            resources:
              requests:
                cpu: 300m
              limits:
                memory: 5Gi

          secondary:
            image:
              repository: ghcr.io/onedr0p/exportarr
              tag: v2.0.1
            env:
              PORT: &metricsPort 9707
              URL: "http://{{ .Release.Name }}.{{ .Release.Namespace }}.svc.cluster.local:80"
            envFrom:
              - secret: sab-env
            args: ["sabnzbd"]

            resources:
              requests:
                cpu: 10m
                memory: 100Mi
              limits:
                memory: 125Mi
        pod:
          securityContext:
            runAsUser: 0

    defaultPodOptions:
      securityContext:
        runAsUser: 0

    service:
      main:
        controller: main
        ports:
          http:
            port: *port
      secondary:
        nameOverride: metrics
        controller: main
        ports:
          metrics:
            port: *metricsPort

    ingress:
      main:
        enabled: true
        className: internal
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "download-box"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.dev/css/base/sabnzbd/dark.css"></head>';
            sub_filter_once on;
        hosts:
          - host: &host "sab.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: *port
              - path: /metrics
                pathType: Prefix
                service:
                  name: secondary
                  port: *metricsPort
          - host: &customhost "sabnzbd.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: *port
              - path: /metrics
                pathType: Prefix
                service:
                  name: secondary
                  port: *metricsPort
        tls:
          - hosts:
              - *host
              - *customhost

    persistence:
      config:
        enabled: true
        type: persistentVolumeClaim
        accessMode: ReadWriteMany
        storageClass: nfs
        size: 1Gi
      mediatv:
        enabled: true
        type: hostPath
        hostPath: /mnt/tv
      mediamovies:
        enabled: true
        type: hostPath
        hostPath: /mnt/movies
      download:
        enabled: true
        type: hostPath
        hostPath: /mnt/transcode

    serviceMonitor:
      secondary:
        enabled: true
        labels:
          app.kubernetes.io/name: sabnzbd
          app.kubernetes.io/instance: sabnzbd-metrics
        selector:
          matchLabels:
            app.kubernetes.io/instance: sabnzbd
            app.kubernetes.io/name: sabnzbd
            app.kubernetes.io/service: sabnzbd-metrics
        endpoints:
          - port: metrics
            interval: 4m
            scrapeTimeout: 90s
            path: /metrics
