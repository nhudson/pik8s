---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &name radarr
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 4.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  values:
    controllers:
      radarr:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/radarr
              tag: 6.0.2.10271@sha256:12b8348c57c556d837d28bbc73a8837fb7f402a29aba40385a0513dbd068881b
            env:
              COMPlus_EnableDiagnostics: 0
              RADARR__SERVER_PORT: &port 7878
              RADARR__APP__INSTANCENAME: Radarr
              RADARR__APP__THEME: dark
              RADARR__AUTH__METHOD: External
              RADARR__AUTH__REQUIRED: DisabledForLocalAddresses
              RADARR__LOG__LEVEL: info
              RADARR__UPDATE__BRANCH: develop
              RADARR__POSTGRES__HOST: pik8s-postgres-pooler.postgres.svc.cluster.local
              RADARR__POSTGRES__MAINDB: radarr-main
              RADARR__POSTGRES__LOGDB: radarr-log
              RADARR__POSTGRES__PORT: 5432
              TP_ADDON: radarr-darker
              TZ: ${TIMEZONE}
            envFrom:
              - secret: radarr-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              runAsUser: 0
            resources:
              requests:
                cpu: 10m
                memory: 400M
              limits:
                memory: 1024M

        pod:
          securityContext:
            runAsUser: 0

    defaultPodOptions:
      securityContext:
        runAsUser: 0

    service:
      app:
        controller: *name
        ports:
          http:
            port: *port

    ingress:
      main:
        enabled: true
        className: internal
        hosts:
          - host: &host "radarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: *name
                  port: *port
        tls:
          - hosts:
              - *host

    persistence:
      media:
        enabled: true
        type: hostPath
        hostPath: /mnt/movies
      pvc:
        enabled: true
        type: hostPath
        hostPath: /mnt/transcode
      config:
        enabled: true
        accessMode: ReadWriteOnce
        storageClass: nfs
        size: 1Gi
